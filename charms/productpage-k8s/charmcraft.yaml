# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: productpage-k8s
type: charm
summary: Product page microservice for the Bookinfo application
description: |
  The Product Page microservice is the frontend service that
  calls the Details and Reviews microservices to display book
  information in the Bookinfo sample application.

links:
  documentation: https://github.com/adhityaravi/bookinfo-k8s-charm
  source: https://github.com/adhityaravi/bookinfo-k8s-charm
  issues: https://github.com/adhityaravi/bookinfo-k8s-charm/issues

assumes:
  - k8s-api
  - juju >= 3.6

platforms:
  ubuntu@22.04:amd64:

parts:
  charm:
    source: .
    plugin: uv
    build-packages: [git]
    build-snaps: [astral-uv]
    override-build: |
      craftctl default

# FIXME: the current way to write the version into the version file doesnt work for the monorepo structure because of the missing .git. find a fix
# git describe --always > $CRAFT_PART_INSTALL/version

containers:
  productpage:
    resource: productpage-image
    mounts:
      - storage: logs
        location: /tmp/logs

storage:
  logs:
    type: filesystem

provides:
  website:
    interface: http

requires:
  details:
    interface: bookinfo-details
    limit: 1
  reviews:
    interface: bookinfo-reviews
    limit: 1
  ratings:
    interface: bookinfo-ratings
    limit: 1
  ingress:
    interface: ingress
    limit: 1

resources:
  productpage-image:
    type: oci-image
    description: OCI image for the Product Page service
    upstream-source: docker.io/istio/examples-bookinfo-productpage-v1:1.20.3

config:
  options:
    port:
      default: 9080
      description: Port on which the Product Page service listens
      type: int
    log-level:
      default: info
      description: Application log level (debug, info, warning, error)
      type: string
    flood-factor:
      default: 0
      description: Number of requests to send to backend services per incoming request (for load testing)
      type: int

actions:
  get-url:
    description: |
      Gets the external endpoint of the workload in case its proxied by an ingress. Otherwise, returns the workload's cluster fqdn.
